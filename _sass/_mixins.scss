@mixin breakpoint($pixel) {
		@media only screen and (min-width: $pixel) { @content; }
}

@mixin under_breakpoint($pixel) {
		@media only screen and (max-width: $pixel) { @content; }
}

@mixin over_breakpoint($pixel) {
		@media only screen and (min-width: $pixel) { @content; }
}

@mixin image-2x($image, $width, $height) {
	@media (min--moz-device-pixel-ratio: 1.3),
				 (-o-min-device-pixel-ratio: 2.6/2),
				 (-webkit-min-device-pixel-ratio: 1.3),
				 (min-device-pixel-ratio: 1.3),
				 (min-resolution: 1.3dppx) {
		/* on retina, use image that's scaled by 2 */
		background-image: url($image);
		background-size: $width $height;
	}
}

@mixin retina() {
	@media only screen and (-webkit-min-device-pixel-ratio: 2), 
    only screen and (-moz-min-device-pixel-ratio: 2), 
    only screen and (-o-min-device-pixel-ratio: 2/1), 
    only screen and (min-device-pixel-ratio: 2), 
    only screen and (min-resolution: 2dppx) {
    	@content;
    }
}

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	border-radius: $radius;
	background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Single side border-radius
@mixin border-top-radius($radius) {
	-webkit-border-top-right-radius: $radius;
	border-top-right-radius: $radius;
	 -webkit-border-top-left-radius: $radius;
	 border-top-left-radius: $radius;
	 background-clip: padding-box;
}
@mixin border-right-radius($radius) {
	-webkit-border-bottom-right-radius: $radius;
	border-bottom-right-radius: $radius;
		 -webkit-border-top-right-radius: $radius;
		 border-top-right-radius: $radius;
		 background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
	-webkit-border-bottom-right-radius: $radius;
	border-bottom-right-radius: $radius;
	 -webkit-border-bottom-left-radius: $radius;
	 border-bottom-left-radius: $radius;
	 background-clip: padding-box;
}
@mixin border-left-radius($radius) {
	-webkit-border-bottom-left-radius: $radius;
	border-bottom-left-radius: $radius;
		 -webkit-border-top-left-radius: $radius;
		 border-top-left-radius: $radius;
		 background-clip: padding-box;
}

@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

@mixin text-truncate {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin square($width) {
	width: $width;
	height: 0;
	padding-bottom: $width;
}

@mixin transition($transition-property, $transition-time, $method) {
	-webkit-transition: $transition-property $transition-time $method;
	-moz-transition: $transition-property $transition-time $method;
	-ms-transition: $transition-property $transition-time $method;
	-o-transition: $transition-property $transition-time $method;
	transition: $transition-property $transition-time $method;
}

%clearfix {
	//usage:  @extend %clearfix;  //inside an element
	*zoom: 1;
	&:before, &:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@function calculateRem($size) {
	$remSize: $size / 16px;
	@return $remSize * 1rem;
}

@mixin font-size($size) {
	font-size: $size;
	font-size: calculateRem($size);
}

@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin placeholder-color($color) {
	::-webkit-input-placeholder { /* WebKit browsers */
			color:    $color;
	}
	:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
			color:    $color;
			opacity:  1;
	}
	::-moz-placeholder { /* Mozilla Firefox 19+ */
			color:    $color;
			opacity:  1;
	}
	:-ms-input-placeholder { /* Internet Explorer 10+ */
			color:    $color;
	}
}

@mixin appearance($style) {
	-moz-appearance: $style;
	-webkit-appearance: $style;
	appearance: $style;
}